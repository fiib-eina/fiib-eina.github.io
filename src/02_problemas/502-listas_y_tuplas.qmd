---
title: Problemas 9
subtitle: Composición iterativa
format: html
draft: true
---

## Ordena una lista de 2 elementos

Escribe una función que reciba una lista de 2 elementos (no es necesario que verifique el tamaño, se asume que serán 2), y devuelva una nueva lista con los elementos ordenados de menos a mayor.

```python
ordena_lista([3, 1])  # Debería devolver [1, 3]
ordena_lista([1, 3])  # Debería devolver [1, 3]
```

<details>
<summary>Solución</summary>

```python
def ordena_lista(lista):
    nueva_lista = [0, 0]
    # nueva_lista = [0] * 2

    if lista[0] > lista[1]:
        nueva_lista[0] = lista[1]
        nueva_lista[1] = lista[0]
    else:
        nueva_lista[0] = lista[0]
        nueva_lista[1] = lista[1]
    return nueva_lista
```

</details>

<details>
<summary>Solución alternativa</summary>

**Recuerda usar el _early return_ con cuidado y no abusar de él**

```python
def ordena_lista(lista):
    a = lista[0]
    b = lista[1]
    if a > b:
        return [b, a]
    else:
        return [a, b]
```

</details>

## Cuenta palabras

Escribe una función que reciba un string `texto` y devuelva el número de palabras que contiene.

- Asumiremos que:
    - Mínimo habrá una palabra
    - El texto está bien formateado
    - Sin signos de puntuación 
    - Sin caracteres especiales 
    - Con un espacio entre cada palabra.

```python
cuenta_palabras("Nice")           # 1
cuenta_palabras("Hola mundo")     # 2
cuenta_palabras("Qué tal estás")  # 3
```

<details>
<summary>Pista</summary>

- Puedes serte útil contar los espacios en el texto.

</details>

<details>
<summary>Solución</summary>

```python
def cuenta_palabras(texto):
    cuenta = 1
    for i in range(len(texto)):
        if texto[i] == " ":
            cuenta += 1
    return cuenta
```

</details>

## Contiene la I

- Desarrolla una función que reciba un string `texto` y una letra `letra` y devuelva un valor booleano que represente si `texto` contiene `letra`.

```python
def contiene(texto, letra):
    # ???

# TEST
print(contiene("Hola", "a"))  # True
print(contiene("Hola", "j"))  # False
```

---

```python
def contiene(texto, letra):
    encontrada = False
    i = 0
    while i < len(texto) and not encontrada:
        if texto[i] == letra:
            encontrada = True
        i += 1
    return encontrada

# TEST
print(contiene("Hola", "a"))
print(contiene("Hola", "j"))
```

| True
| False


