---
title: Examen 2024-01-12
subtitle: Examen teórico
format: html
draft: true
---

## Ejercicio 3

Se quiere hacer un somero análisis de la evolución y fluctuación de dos de las criptomonedas más populares, Bitcoin (BTC) y Ethereum (ETH), en el año 2023. Dicho análisis supone calcular unas estadísticas simples sobre el histórico del valor de cotización de dichas criptomonedas respecto al dólar estadounidense (USD). La cotización de una moneda frente al dólar es el tipo de cambio, esto es, a cuántos dólares equivale un BTC o un ETH. 

Se dispone para ello de un **fichero de texto**, de nombre `cotizaciones.txt` que contiene la cotización diaria de cada una de las criptomonedas para cada día del año. El formato de dicho fichero es tal que cada línea del fichero contiene tres datos separados por espacios en blanco, en este orden (ver también Fig. 2): el valor de cotización, tres caracteres indicando la criptomoneda (BTC o ETH), y la fecha en formato `dd-mm-aaaa`.

En el fichero, las cotizaciones están ordenadas cronológicamente. Sin embargo, para cada día del año, no se sabe a priori cuál de las dos monedas está escrita antes en el fichero (en el ejemplo de la Fig. 2 se ve que para ciertos días está antes BTC, y para otros está antes ETH). El fichero sólo almacena cotizaciones de esas dos criptomonedas, y todos los días del año tienen valor de cotización para ambas monedas. 

**Ejemplo de fichero `cotizaciones.txt` (se muestra sólo un fragmento del fichero)**

```plaintext
17438.70 BTC 01-01-2023
1335.55 ETH 01-01-2023
1388.37 ETH 02-01-2023
17936.70 BTC 02-01-2023
1416.79 ETH 03-01-2023
18847.70 BTC 03-01-2023
19922.90 BTC 04-01-2023
1451.22 ETH 04-01-2023
1551.71 ETH 05-01-2023
20979.70 BTC 05-01-2023
```

### Volatilidad

Calcular y mostrar por pantalla la volatilidad $V$ de cada una de las dos criptomonedas a lo largo de 2023.

Para calcular la volatilidad $V$ se necesita la variación relativa diaria en precio, $G$. La variación diaria en precio se puede calcular para cada día $t$ como:

$$
G(t) = \frac{Z(t+1) – Z(t)}{Z(t)}
$$

donde $t$ es el día actual, $t+1$ el día siguiente, y $Z$ el valor de cotización correspondiente a ese día. Una vez se tiene el valor de $G(t)$ para cada día del año, la volatilidad anual es la media de $G(t)$ a lo largo de un año, esto es: 

$$
V = \frac{1}{N} \sum_{t=1}^{t=N} abs(G(t))
$$

donde $N=365$ es el número de días, y $abs(\cdot)$ es la función valor absoluto.

::: {.callout-warning}
Nota: Para el cálculo de $G$ del último día del año, dado que no tenemos la cotización del día siguiente ($Z(t+1)$), cogeremos el mismo valor de G que en el penúltimo día, es decir, $G(365) = G(364))$.
:::

### Variación relativa interanual

Calcular y mostrar por pantalla la \textit{variación relativa interanual} de cada criptomoneda en 2023. Esto no es más que la variación relativa entre el primer y último día del año:

$$
G_{IA} = \frac{Z(365) – Z(1)}{Z(1)}
$$

**Importante**, Se valorará el uso adecuado de subprogramas, y se valorará negativamente la  repetición innecesaria de código, así como recorrer múltiples veces el fichero de texto.

Observaciones:

- Ignora la posibilidad de que el año sea bisiesto, a efectos de la solución todos los años tienen 365 días.
- La cotización de una criptomoneda frente al dólar nunca es cero.
- El formato que debe tener la salida por pantalla se puede ver en la Figura 3.

**Ejemplo de salida por pantalla (a efectos de ilustrar el formato de la salida)**

```plaintext
Volatilidad BTC: 0.048
Volatilidad ETH: 0.045
Interanual BTC: 0.203
Interanual ETH: 0.162
```

<!-- SOLUCION ORIGINAL EN PASCAL

program criptomonedas_conVec;

const
   DIASANIO = 365;

type
   tpVecReales = array[1..DIASANIO] of real;
   
function variacionRelativa(cSig, cAnt: real): real;
begin
   variacionRelativa := (cSig - cAnt) / cAnt;
end;

function volatilidadAnual(v: tpVecReales): real;
var
   vol: real; i: integer;
begin
   vol := 0.0;   
   for i:=1 to (DIASANIO-1) do
   begin
      vol := vol + abs(variacionRelativa(v[i+1], v[i]));
   end;
   vol := vol + variacionRelativa(v[DIASANIO], v[DIASANIO-1]);
   vol := vol / DIASANIO;
   volatilidadAnual := vol;
end;

var
   vETH, vBTC: tpVecReales;
   f: text;
   volETH, volBTC: real;
   interanualETH, interanualBTC: real;
   i: integer;
   mon1, mon2, c: char;
   cot1, cot2: real;
begin
   // 0. Leer de fichero y almacenar en vectores correspondientes }
   assign(f, 'cotizaciones.txt');
   reset(f);
   i := 1;
   while not eof(f) do 
   begin
      readln(f, cot1, c, mon1); 
      readln(f, cot2, c, mon2);
      { Se asume que mon1 siempre sera B o E, si no, con else-if }
      if (mon1 = 'B') then 
      begin
         vBTC[i] := cot1;
         vETH[i] := cot2;
      end
      else // if (mon1 = 'E') then 
      begin
         vBTC[i] := cot2;
         vETH[i] := cot1;
      end;
      i := i + 1;
   end;
   close(f);
   
   // 1. Volatilidad
   volETH := volatilidadAnual(vETH);
   volBTC := volatilidadAnual(vBTC);
   
   // 2. Variacion interanual
   interanualETH := variacionRelativa(vETH[DIASANIO], vETH[1]);
   interanualBTC := variacionRelativa(vBTC[DIASANIO], vBTC[1]);
   
   writeln('Volatilidad BTC: ', volBTC:1:3);
   writeln('Volatilidad ETH: ', volETH:1:3);

   writeln('Interanual BTC: ', interanualBTC:1:3);
   writeln('Interanual ETH: ', interanualETH:1:3);
 end.

-->

<details>
<summary>Solución</summary>

```python
def variacion_relativa(cSig, cAnt):
    return (cSig - cAnt) / cAnt


def volatilidad_anual(v):
    vol = 0.0
    for i in range(len(v) - 1):
        vol += abs(variacion_relativa(v[i + 1], v[i]))
    # Sin usar -1
    vol += variacion_relativa(v[len(v) - 1], v[len(v) - 2])
    vol /= len(v)
    return vol


def leer_fichero(fichero):
    vETH = []
    vBTC = []
    with open(fichero, "r") as f:
        line = f.readline()
        while line != "":
            datos = line.split(" ")
            if datos[1] == "ETH":
                vETH.append(float(datos[0]))
            else:
                vBTC.append(float(datos[0]))
            line = f.readline()
    return [vETH, vBTC]


cotizaciones = leer_fichero("cotizaciones.txt")
vETH = cotizaciones[0]
vBTC = cotizaciones[1]

# 1. Volatilidad
volETH = volatilidad_anual(vETH)
volBTC = volatilidad_anual(vBTC)

# 2. Variacion interanual
interanualETH = variacion_relativa(vETH[len(vETH) - 1], vETH[0])
interanualBTC = variacion_relativa(vBTC[len(vBTC) - 1], vBTC[0])

print(f"Volatilidad BTC: {volBTC:.3f}")
print(f"Volatilidad ETH: {volETH:.3f}")
print(f"Interanual BTC: {interanualBTC:.3f}")
print(f"Interanual ETH: {interanualETH:.3f}")
```

</details>

