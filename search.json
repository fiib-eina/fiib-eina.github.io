[
  {
    "objectID": "src/03_practicas/p0/101_introductoria.html#objetivos",
    "href": "src/03_practicas/p0/101_introductoria.html#objetivos",
    "title": "Práctica 0",
    "section": "Objetivos",
    "text": "Objetivos\n\nInstalar el entorno de trabajo\nFamiliarizarse con el entorno de trabajo\n\nEditor de texto\nTerminal\n\nAprender a ejecutar (no escribir) código Python\nIntuyendo Python\nEntregar"
  },
  {
    "objectID": "src/03_practicas/p0/101_introductoria.html#instalación-del-entorno-de-trabajo",
    "href": "src/03_practicas/p0/101_introductoria.html#instalación-del-entorno-de-trabajo",
    "title": "Práctica 0",
    "section": "Instalación del entorno de trabajo",
    "text": "Instalación del entorno de trabajo\nPara desarrollar en python necesitamos:\n\nIntérprete de Python: Python\nEntorno de desarrollo: Visual Studio Code"
  },
  {
    "objectID": "src/03_practicas/p0/101_introductoria.html#familiarizarse-con-el-entorno-de-trabajo",
    "href": "src/03_practicas/p0/101_introductoria.html#familiarizarse-con-el-entorno-de-trabajo",
    "title": "Práctica 0",
    "section": "Familiarizarse con el entorno de trabajo",
    "text": "Familiarizarse con el entorno de trabajo\nDurante el proceso de desarrollo, siempre tendremos en cuenta:\n\nSistema ficheros: Localización de los programas\nCódigo fuente: Contenido de los programas\nTerminal: Ejecución de programas python\n\nEstos tres elementos pueden ser controlados desde Visual Studio Code."
  },
  {
    "objectID": "src/03_practicas/p0/101_introductoria.html#programa-interactivo",
    "href": "src/03_practicas/p0/101_introductoria.html#programa-interactivo",
    "title": "Práctica 0",
    "section": "Programa interactivo",
    "text": "Programa interactivo\n\nMás adelante en el curso aprenderás a hacer programas que requieran de la interacción del usuario.\nDicha interacción se realiza también en la propia terminal.\nPara familiarizarte ahora con este comportamiento, vamos a escribir y ejecutar un programa interactivo."
  },
  {
    "objectID": "src/03_practicas/p0/101_introductoria.html#intuyendo-python",
    "href": "src/03_practicas/p0/101_introductoria.html#intuyendo-python",
    "title": "Práctica 0",
    "section": "Intuyendo Python",
    "text": "Intuyendo Python\nA continuación evaluaremos nuestra capacidad de intuir y entender el funcionamiento de código python.\nTarea: Documenta los siguientes programas en un docstring.\n\nDescarga o copia los ficheros en la carpeta p0.\nÁbrelos con el editor de texto y lee su contenido.\nEjecuta los programas desde la terminal de VSCode.\nAñade un docstring al principio de cada fichero incluyendo tu nombre y explicando qué hace el programa.\n\nNota: Puedes hacer Clic derecho &gt; Guardar enlace como... en los nombres de cada fichero para descargarlos o hacer clic en el icono del portapapeles para copiar todo el contenido."
  },
  {
    "objectID": "src/03_practicas/p0/101_introductoria.html#entrega-de-la-práctica",
    "href": "src/03_practicas/p0/101_introductoria.html#entrega-de-la-práctica",
    "title": "Práctica 0",
    "section": "Entrega de la práctica",
    "text": "Entrega de la práctica\nTodas las prácticas se entregarán a través de Moodle. Esta Práctica 0 no es evaluable, pero sí se deberá entregar para familiarizarse con el proceso.\nTarea: Entrega el código de la práctica.\n\nVerifica que has nombrado correctamente los ficheros. Un fichero mal nombrado no será evaluado.\nVerifica que has añadido un docstring a cada fichero con tu nombre y NIP.\nVerifica que el funcionamiento de los programas es correcto.\nAccede a la entrega en Moodle y lee si hay instrucciones extra.\nSube los ficheros *.py individualmente (sin comprimir y sin crear carpetas adicionales).\n\nNota: No se aceptarán entregas fuera de plazo. En el caso de que se acerque la fecha límite de entrega, se recomienda al menos subir los ejercicios que se hayan terminado. Se podrán resubir tantas veces como se desee antes de la fecha límite de entrega.\n\n\n\n\nFundamentos de Informática"
  },
  {
    "objectID": "src/03_practicas/p1/201_tipos_de_datos_primitivos.html",
    "href": "src/03_practicas/p1/201_tipos_de_datos_primitivos.html",
    "title": "Práctica 1",
    "section": "",
    "text": "Desarrolla un programa en Python que solicite al usuario un número real, que representará una longitud medida en centímetros, y escriba en la pantalla la medida equivalente en pulgadas.\nUna pulgada anglosajona actual equivale a 25,4 mm.\nUn ejemplo de ejecución:\nIntroduce un valor en centímetros:\n1\nEn pulgadas son:\n0.39370078740157477\nOtro ejemplo de ejecución:\nIntroduce un valor en centímetros:\n25.4\nEn pulgadas son:\n10.0\nY otro más:\nIntroduce un valor en centímetros:\n84.025\nEn pulgadas son:\n33.080708661417326\nEntrega: Escribe tu programa en un fichero denominado pulgadas.py.\n\n\n\nEscribe un programa en Python que solicite una temperatura expresada en grados Fahrenheit y escriba en la pantalla su equivalente en grados Celsius.\nLa fórmula que proporciona la equivalencia entre grados Celsius y Fahrenheit es\n\\[\nC=\\frac{5}{9}(F - 32)\n\\]\ndonde \\(C\\) es la temperatura en grados Celsius y \\(F\\) es la temperatura en grados Fahrenheit.\nUn ejemplo de ejecución:\nEscriba una temperatura expresada en grados Fahrenheit:\n32\nEn grados Celsius son:\n0.0\nY otro:\nEscriba una temperatura expresada en grados Fahrenheit:\n-459.67\nEn grados Celsius son:\n-273.15000000000003\nAunque probablemente no sea cierto, se dice que Daniel Gabriel Fahrenheit estableció el límite superior de su escala (100 °F) en la temperatura del cuerpo humano. Utiliza tu programa para comprobar que Fahrenheit tenía fiebre cuando calibró su escala.\nEntrega: Escribe tu programa en un fichero denominado fahrenheit.py.\n\n\n\nUna casa de cambio de moneda se ha especializado en dos divisas: euro y yen. Esta casa de cambio utiliza una tasa de conversión de euros a yenes fija durante todo un mes. Para este mes de febrero, ha establecido que va a cambiar un euro por 161,03241 yenes.\nEscribe un programa en Python que pida al usuario que escriba una cantidad no negativa de dinero expresada en euros y le informe de su equivalente en yenes:\nEscriba una cantidad no negativa de dinero en euros:\n43.65\nYenes:\n7029\nComo los yenes no tienen moneda fraccionaria (los senes dejaron de utilizarse en 1953), queremos que el número de yenes resultante se escriba sin decimales.\nUn segundo ejemplo se presenta a continuación para ilustrar el comportamiento deseado del programa:\nEscriba una cantidad no negativa de dinero en euros:\n43.69\nYenes:\n7036\nEntrega: Escribe tu programa en un fichero denominado yenes.py."
  },
  {
    "objectID": "src/03_practicas/p1/201_tipos_de_datos_primitivos.html#problemas-de-conversión",
    "href": "src/03_practicas/p1/201_tipos_de_datos_primitivos.html#problemas-de-conversión",
    "title": "Práctica 1",
    "section": "",
    "text": "Desarrolla un programa en Python que solicite al usuario un número real, que representará una longitud medida en centímetros, y escriba en la pantalla la medida equivalente en pulgadas.\nUna pulgada anglosajona actual equivale a 25,4 mm.\nUn ejemplo de ejecución:\nIntroduce un valor en centímetros:\n1\nEn pulgadas son:\n0.39370078740157477\nOtro ejemplo de ejecución:\nIntroduce un valor en centímetros:\n25.4\nEn pulgadas son:\n10.0\nY otro más:\nIntroduce un valor en centímetros:\n84.025\nEn pulgadas son:\n33.080708661417326\nEntrega: Escribe tu programa en un fichero denominado pulgadas.py.\n\n\n\nEscribe un programa en Python que solicite una temperatura expresada en grados Fahrenheit y escriba en la pantalla su equivalente en grados Celsius.\nLa fórmula que proporciona la equivalencia entre grados Celsius y Fahrenheit es\n\\[\nC=\\frac{5}{9}(F - 32)\n\\]\ndonde \\(C\\) es la temperatura en grados Celsius y \\(F\\) es la temperatura en grados Fahrenheit.\nUn ejemplo de ejecución:\nEscriba una temperatura expresada en grados Fahrenheit:\n32\nEn grados Celsius son:\n0.0\nY otro:\nEscriba una temperatura expresada en grados Fahrenheit:\n-459.67\nEn grados Celsius son:\n-273.15000000000003\nAunque probablemente no sea cierto, se dice que Daniel Gabriel Fahrenheit estableció el límite superior de su escala (100 °F) en la temperatura del cuerpo humano. Utiliza tu programa para comprobar que Fahrenheit tenía fiebre cuando calibró su escala.\nEntrega: Escribe tu programa en un fichero denominado fahrenheit.py.\n\n\n\nUna casa de cambio de moneda se ha especializado en dos divisas: euro y yen. Esta casa de cambio utiliza una tasa de conversión de euros a yenes fija durante todo un mes. Para este mes de febrero, ha establecido que va a cambiar un euro por 161,03241 yenes.\nEscribe un programa en Python que pida al usuario que escriba una cantidad no negativa de dinero expresada en euros y le informe de su equivalente en yenes:\nEscriba una cantidad no negativa de dinero en euros:\n43.65\nYenes:\n7029\nComo los yenes no tienen moneda fraccionaria (los senes dejaron de utilizarse en 1953), queremos que el número de yenes resultante se escriba sin decimales.\nUn segundo ejemplo se presenta a continuación para ilustrar el comportamiento deseado del programa:\nEscriba una cantidad no negativa de dinero en euros:\n43.69\nYenes:\n7036\nEntrega: Escribe tu programa en un fichero denominado yenes.py."
  },
  {
    "objectID": "src/03_practicas/p1/201_tipos_de_datos_primitivos.html#rectángulo",
    "href": "src/03_practicas/p1/201_tipos_de_datos_primitivos.html#rectángulo",
    "title": "Práctica 1",
    "section": "2 Rectángulo",
    "text": "2 Rectángulo\nImplementa un programa que:\n\nSolicite al usuario las coordenadas de dos esquinas opuestas de un rectángulo.\n\nx1, y1, x2, y2\n\nUsando esas coordenadas, calcule:\n\nEl área del rectángulo\nEl perímetro del rectángulo\n\n\n\nUn ejemplo de ejecución del programa solicitado:\nIntroduzca x1:\n2\nIntroduzca y1:\n3\nIntroduzca x2:\n5\nIntroduzca y2:\n6\n\nEl área del rectángulo es:\n9.0\n\nEl perímetro del rectángulo es:\n12.0\nY otro:\nIntroduzca x1:\n1.5\nIntroduzca y1:\n7.4\nIntroduzca x2:\n6.8\nIntroduzca y2:\n2.3\n\nEl área del rectángulo es:\n27.03\n\nEl perímetro del rectángulo es:\n20.8\nEntrega: Escribe tu programa en un fichero denominado rectangulo.py."
  },
  {
    "objectID": "src/03_practicas/p1/201_tipos_de_datos_primitivos.html#habitación-de-hotel",
    "href": "src/03_practicas/p1/201_tipos_de_datos_primitivos.html#habitación-de-hotel",
    "title": "Práctica 1",
    "section": "3 Habitación de hotel",
    "text": "3 Habitación de hotel\nEscribe un programa en Python que interaccione con el usuario mostrando el siguiente comportamiento:\nEscriba un número de habitación:\n514\n\nPlanta:\n5\nNúmero:\n14\nEl número de habitación escrito por el usuario sigue el convenio habitual de numeración de habitaciones en hoteles: el número de centenas indican la planta en la que está la habitación y las decenas y unidades indican el número de habitación dentro de la planta. Por el momento, vamos a suponer que el usuario siempre va a escribir números positivos que representan números de habitación válidas con formato establecido.\nUn segundo ejemplo se presenta a continuación para ilustrar el comportamiento deseado del programa.\nEscriba un número de habitación:\n1803\n\nPlanta:\n18\nNúmero:\n3\nEntrega: Escribe tu programa en un fichero denominado hotel.py."
  },
  {
    "objectID": "src/03_practicas/p1/201_tipos_de_datos_primitivos.html#condiciones-booleanas",
    "href": "src/03_practicas/p1/201_tipos_de_datos_primitivos.html#condiciones-booleanas",
    "title": "Práctica 1",
    "section": "4 Condiciones booleanas",
    "text": "4 Condiciones booleanas\nEscribe un programa en Python que pida al usuario tres números enteros y diga si se cumple que los tres números son pares, positivos y además el segundo número está comprendido estrictamente entre el primero y el tercero:\nEscribe un primer número:\n2\nEscribe un segundo número:\n4\nEscribe un tercer número:\n8\nCumplen todas las condiciones:\nTrue\nOtro ejemplo de ejecución:\nEscribe un primer número:\n3\nEscribe un segundo número:\n-2\nEscribe un tercer número:\n-5\nCumplen todas las condiciones:\nFalse\nEntrega: Escribe tu programa en un fichero denominado entre_pares.py."
  },
  {
    "objectID": "src/03_practicas/p1/201_tipos_de_datos_primitivos.html#entrega-de-la-práctica",
    "href": "src/03_practicas/p1/201_tipos_de_datos_primitivos.html#entrega-de-la-práctica",
    "title": "Práctica 1",
    "section": "5 Entrega de la práctica",
    "text": "5 Entrega de la práctica\nAntes del sábado 15 de febrero a las 18:00, deberán haberse subido a Moodle los siguientes ficheros:\n\npulgadas.py\nfahrenheit.py\nyenes.py\nrectangulo.py\nhotel.py\nentre_pares.py"
  },
  {
    "objectID": "src/02_problemas/301-composicion_condicional.html",
    "href": "src/02_problemas/301-composicion_condicional.html",
    "title": "Problemas 3",
    "section": "",
    "text": "Escribe un programa en Python que solicite al usuario una respuesta y determine si está seguro de eliminar un archivo. El programa debe aceptar las respuestas s, n, si y no.\n¿Está seguro de que desea eliminar el archivo? (s)i/(n)o:\nsi\nARCHIVO ELIMINADO\n¿Está seguro de que desea eliminar el archivo? (s)i/(n)o:\nn\nSKIP\n\n\nSolución\n\nprint(\"¿Está seguro de que desea eliminar el archivo? (s)i/(n)o:\")\nrespuesta = input()\n\nif respuesta == \"s\" or respuesta == \"si\":\n    print(\"ARCHIVO ELIMINADO\")\nelif respuesta == \"n\" or respuesta == \"no\":\n    print(\"SKIP\")"
  },
  {
    "objectID": "src/02_problemas/301-composicion_condicional.html#está-seguro-de-que-desea-eliminar-el-archivo",
    "href": "src/02_problemas/301-composicion_condicional.html#está-seguro-de-que-desea-eliminar-el-archivo",
    "title": "Problemas 3",
    "section": "",
    "text": "Escribe un programa en Python que solicite al usuario una respuesta y determine si está seguro de eliminar un archivo. El programa debe aceptar las respuestas s, n, si y no.\n¿Está seguro de que desea eliminar el archivo? (s)i/(n)o:\nsi\nARCHIVO ELIMINADO\n¿Está seguro de que desea eliminar el archivo? (s)i/(n)o:\nn\nSKIP\n\n\nSolución\n\nprint(\"¿Está seguro de que desea eliminar el archivo? (s)i/(n)o:\")\nrespuesta = input()\n\nif respuesta == \"s\" or respuesta == \"si\":\n    print(\"ARCHIVO ELIMINADO\")\nelif respuesta == \"n\" or respuesta == \"no\":\n    print(\"SKIP\")"
  },
  {
    "objectID": "src/02_problemas/301-composicion_condicional.html#determina-si-es-una-casilla-de-oca",
    "href": "src/02_problemas/301-composicion_condicional.html#determina-si-es-una-casilla-de-oca",
    "title": "Problemas 3",
    "section": "2 Determina si es una casilla de Oca",
    "text": "2 Determina si es una casilla de Oca\nEscribe un programa en Python que solicite al usuario un número de casilla y determine si es una casilla de Oca.\nUna casilla es Oca si es multiplo de 9 o (múltiplo de 9) + 5.\n\n5, 9, 14, 18, 23, 27, 32, 36, 41, 45, 50, 54, 59\n\nIntroduce el número de casilla:\n9\n¿Es casilla de Oca?\nTrue\n\n\nSolución\n\nprint(\"Introduce el número de casilla:\")\n\ncasilla = int(input())\n\nes_oca = casilla % 9 == 0 or casilla % 9 == 5\n\nprint(\"¿Es casilla de Oca?\")\nprint(es_oca)"
  },
  {
    "objectID": "src/02_problemas/301-composicion_condicional.html#determina-si-es-un-año-bisiesto",
    "href": "src/02_problemas/301-composicion_condicional.html#determina-si-es-un-año-bisiesto",
    "title": "Problemas 3",
    "section": "3 Determina si es un año bisiesto",
    "text": "3 Determina si es un año bisiesto\nEscribe un programa en Python que solicite al usuario un año y determine si es bisiesto.\nUn año es bisiesto si\n\nes divisible por 4 y no es divisibles por 100\no es divisible por 400.\n\nIntroduce el año:\n2020\n¿Es año bisiesto?\nTrue\n\n\nSolución\n\nprint(\"Introduce el año:\")\naño = int(input())\n\nes_bisiesto = anyo % 4 == 0 and (anyo % 100 != 0 or anyo % 400 == 0)\n# es_bisiesto = (anyo % 4 == 0 and anyo % 100 != 0) or anyo % 400 == 0\n\nprint(\"¿Es año bisiesto?\")\nprint(es_bisiesto)\n\n\n\nSolución más legible\n\nprint(\"Introduce el año:\")\naño = int(input())\n\nmultiplo_4 = anyo % 4 == 0\nmultiplo_100 = anyo % 100 == 0\nmultiplo_400 = anyo % 400 == 0\nes_bisiesto = multiplo_400 or (multiplo_4 and not multiplo_100)\n\nprint(\"¿Es año bisiesto?\")\nprint(es_bisiesto)"
  },
  {
    "objectID": "src/02_problemas/301-composicion_condicional.html#saludar-según-la-hora",
    "href": "src/02_problemas/301-composicion_condicional.html#saludar-según-la-hora",
    "title": "Problemas 3",
    "section": "4 Saludar según la hora",
    "text": "4 Saludar según la hora\nEscribe un programa en Python que solicite al usuario una hora y salude según la hora introducida. Saludo según el rango de horas:\n\nDe 07:00 a 11:59 : Buenos días\nDe 12:00 a 19:59 : Buenas tardes\nDe 20:00 a 06:59 : Buenas noches\n\nIntroduce la hora:\n8\nBuenos días\nIntroduce la hora:\n14\nBuenas tardes\n\n\nSolución\n\nprint(\"Introduce la hora:\")\nhora = int(input())\n\nif 7 &lt;= hora &lt; 12:\n    print(\"Buenos días\")\nelif 12 &lt;= hora &lt; 20:\n    print(\"Buenas tardes\")\nif 20 &lt;= hora &lt;= 24 or 0 &lt;= hora &lt; 7:\n    print(\"Buenas noches\")\n\n\n\nSolución más sencilla\n\nprint(\"Introduce la hora:\")\nhora = int(input())\n\nif 7 &lt;= hora &lt; 12:\n    print(\"Buenos días\")\nelif 12 &lt;= hora &lt; 20:\n    print(\"Buenas tardes\")\nelse:\n    print(\"Buenas noches\")"
  },
  {
    "objectID": "src/02_problemas/301-composicion_condicional.html#números-ordenados",
    "href": "src/02_problemas/301-composicion_condicional.html#números-ordenados",
    "title": "Problemas 3",
    "section": "5 Números ordenados",
    "text": "5 Números ordenados\nEscribe un programa en Python que solicite al usuario tres números y determine si están ordenados de menor a mayor, de mayor a menor o desordenados.\nIntroduce tres números:\n1\n2\n3\nEstán ordenados de menor a mayor\nIntroduce tres números:\n3\n2\n1\nEstán ordenados de mayor a menor\nIntroduce tres números:\n2\n3\n1\nNo están ordenados\n\n\nSolución\n\nprint(\"Introduce tres números:\")\na = int(input())\nb = int(input())\nc = int(input())\n\nif a &lt; b &lt; c:\n    print(\"Están ordenados de menor a mayor\")\nelif a &gt; b &gt; c:\n    print(\"Están ordenados de mayor a menor\")\nelse:\n    print(\"No están ordenados\")"
  },
  {
    "objectID": "src/02_problemas/100-fundamentos.html",
    "href": "src/02_problemas/100-fundamentos.html",
    "title": "Problemas 1",
    "section": "",
    "text": "¿Qué valor tienen las variables a y b al final del siguiente código?\na = 5\nb = a\na = 10\n\n\nSolución\n\n\n\n\nVariable\nValor final\n\n\n\n\na\n10\n\n\nb\n5"
  },
  {
    "objectID": "src/02_problemas/100-fundamentos.html#asignaciones-secuenciales",
    "href": "src/02_problemas/100-fundamentos.html#asignaciones-secuenciales",
    "title": "Problemas 1",
    "section": "",
    "text": "¿Qué valor tienen las variables a y b al final del siguiente código?\na = 5\nb = a\na = 10\n\n\nSolución\n\n\n\n\nVariable\nValor final\n\n\n\n\na\n10\n\n\nb\n5"
  },
  {
    "objectID": "src/02_problemas/100-fundamentos.html#cambio-de-valores",
    "href": "src/02_problemas/100-fundamentos.html#cambio-de-valores",
    "title": "Problemas 1",
    "section": "2 Cambio de valores",
    "text": "2 Cambio de valores\nConsigue que el valor de a pase a ser el de b y el de b pase a ser el de a.\na = 5\nb = 10\n\n# ??\n\nprint(a)  # 10\nprint(b)  # 5\n\n\nSolución\n\na = 5\nb = 10\n\ntemp = a\na = b\nb = temp\n\nprint(a)  # 10\nprint(b)  # 5"
  },
  {
    "objectID": "src/02_problemas/100-fundamentos.html#averigua-el-tipo-de-dato",
    "href": "src/02_problemas/100-fundamentos.html#averigua-el-tipo-de-dato",
    "title": "Problemas 1",
    "section": "3 Averigua el tipo de dato",
    "text": "3 Averigua el tipo de dato\n¿Cuál es el tipo de dato de cada una de las siguientes variables?\na = 5\nb = 5.0\nc = \"5\"\nd = a + b\ne = a * 2\nf = b / 2\ng = a + int(c)\nh = str(a) + c\n\n\nSolución\n\n\n\n\nVariable\nTipo de dato\n\n\n\n\na\nint\n\n\nb\nfloat\n\n\nc\nstr\n\n\nd\nfloat\n\n\ne\nint\n\n\nf\nfloat\n\n\ng\nint\n\n\nh\nstr"
  },
  {
    "objectID": "src/01_teoria/03_composicion/301_composicion_condicional.html#límites-de-la-composición-secuencial",
    "href": "src/01_teoria/03_composicion/301_composicion_condicional.html#límites-de-la-composición-secuencial",
    "title": "Teoría 301",
    "section": "Límites de la composición secuencial",
    "text": "Límites de la composición secuencial"
  },
  {
    "objectID": "src/01_teoria/03_composicion/301_composicion_condicional.html#composición-condicional",
    "href": "src/01_teoria/03_composicion/301_composicion_condicional.html#composición-condicional",
    "title": "Teoría 301",
    "section": "Composición condicional",
    "text": "Composición condicional"
  },
  {
    "objectID": "src/01_teoria/03_composicion/301_composicion_condicional.html#usos-avanzados-de-la-composición-condicional",
    "href": "src/01_teoria/03_composicion/301_composicion_condicional.html#usos-avanzados-de-la-composición-condicional",
    "title": "Teoría 301",
    "section": "Usos avanzados de la composición condicional",
    "text": "Usos avanzados de la composición condicional"
  },
  {
    "objectID": "src/01_teoria/02_tipos_de_datos_basicos/201_tipos_numerales.html#tipos-de-datos-en-python",
    "href": "src/01_teoria/02_tipos_de_datos_basicos/201_tipos_numerales.html#tipos-de-datos-en-python",
    "title": "Teoría 201",
    "section": "Tipos de datos en Python",
    "text": "Tipos de datos en Python"
  },
  {
    "objectID": "src/01_teoria/02_tipos_de_datos_basicos/201_tipos_numerales.html#enteros",
    "href": "src/01_teoria/02_tipos_de_datos_basicos/201_tipos_numerales.html#enteros",
    "title": "Teoría 201",
    "section": "Enteros",
    "text": "Enteros"
  },
  {
    "objectID": "src/01_teoria/02_tipos_de_datos_basicos/201_tipos_numerales.html#funciones-numéricas",
    "href": "src/01_teoria/02_tipos_de_datos_basicos/201_tipos_numerales.html#funciones-numéricas",
    "title": "Teoría 201",
    "section": "Funciones numéricas",
    "text": "Funciones numéricas"
  },
  {
    "objectID": "src/01_teoria/02_tipos_de_datos_basicos/201_tipos_numerales.html#expresiones-avanzadas-con-números",
    "href": "src/01_teoria/02_tipos_de_datos_basicos/201_tipos_numerales.html#expresiones-avanzadas-con-números",
    "title": "Teoría 201",
    "section": "Expresiones avanzadas con números",
    "text": "Expresiones avanzadas con números"
  },
  {
    "objectID": "src/01_teoria/02_tipos_de_datos_basicos/201_tipos_numerales.html#ejercicios",
    "href": "src/01_teoria/02_tipos_de_datos_basicos/201_tipos_numerales.html#ejercicios",
    "title": "Teoría 201",
    "section": "Ejercicios",
    "text": "Ejercicios"
  },
  {
    "objectID": "src/01_teoria/01_conceptos_basicos/102_lenguajes.html#algoritmo",
    "href": "src/01_teoria/01_conceptos_basicos/102_lenguajes.html#algoritmo",
    "title": "Teoría 102",
    "section": "Algoritmo",
    "text": "Algoritmo"
  },
  {
    "objectID": "src/01_teoria/01_conceptos_basicos/102_lenguajes.html#lenguajes-de-programación",
    "href": "src/01_teoria/01_conceptos_basicos/102_lenguajes.html#lenguajes-de-programación",
    "title": "Teoría 102",
    "section": "Lenguajes de programación",
    "text": "Lenguajes de programación"
  },
  {
    "objectID": "src/01_teoria/01_conceptos_basicos/102_lenguajes.html#lenguajes-de-alto-nivel-1",
    "href": "src/01_teoria/01_conceptos_basicos/102_lenguajes.html#lenguajes-de-alto-nivel-1",
    "title": "Teoría 102",
    "section": "Lenguajes de alto nivel",
    "text": "Lenguajes de alto nivel"
  },
  {
    "objectID": "src/01_teoria/01_conceptos_basicos/102_lenguajes.html#entorno-integrado-de-desarrollo",
    "href": "src/01_teoria/01_conceptos_basicos/102_lenguajes.html#entorno-integrado-de-desarrollo",
    "title": "Teoría 102",
    "section": "Entorno Integrado de Desarrollo",
    "text": "Entorno Integrado de Desarrollo"
  },
  {
    "objectID": "src/01_teoria/00_presentacion/000_presentación.html#profesores",
    "href": "src/01_teoria/00_presentacion/000_presentación.html#profesores",
    "title": "Presentación de la Asignatura",
    "section": "Profesores",
    "text": "Profesores\n\nSergio Martín Segura (segura@unizar.es)\n\nTeoría, problemas y prácticas\nDespacho: L2.09, Ada Byron\n\nMiguel Ángel Latre Abadía (latre@unizar.es)\n\nPrácticas\nDespacho: D2.22, Ada Byron\n\n\nTutorías: Consultar enlace en Moodle"
  },
  {
    "objectID": "src/01_teoria/00_presentacion/000_presentación.html#organización",
    "href": "src/01_teoria/00_presentacion/000_presentación.html#organización",
    "title": "Presentación de la Asignatura",
    "section": "Organización",
    "text": "Organización\n\nClases teóricas: 2 horas semanales\nClases de problemas: 1 hora semanal\nPrácticas de laboratorio: 2 horas cada dos semanas"
  },
  {
    "objectID": "src/01_teoria/00_presentacion/000_presentación.html#evaluación-final",
    "href": "src/01_teoria/00_presentacion/000_presentación.html#evaluación-final",
    "title": "Presentación de la Asignatura",
    "section": "Evaluación final",
    "text": "Evaluación final\n\nLa nota final, tal cual indica la guía docente, se calcula:\n\n\\(70\\%\\) Examen escrito (mínimo \\(5\\))\n\\(30\\%\\) Nota de prácticas (dos opciones):\n\nEntregas de prácticas\nExamen práctico final (anula la nota de entregas)\n\n\nSe deberá obtener una nota mínima de \\(5\\) ponderada para aprobar la asignatura\nSegunda convocatoria\n\nExamen escrito + Examen práctico final\nMismas ponderaciones"
  },
  {
    "objectID": "src/01_teoria/00_presentacion/000_presentación.html#dudas",
    "href": "src/01_teoria/00_presentacion/000_presentación.html#dudas",
    "title": "Presentación de la Asignatura",
    "section": "¿Dudas?",
    "text": "¿Dudas?\n\n\n\n\nFundamentos de Informática"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Fundamentos de informática",
    "section": "",
    "text": "01_teoria/00_presentacion/ Presentación de la Asignatura - Información general \n\n\n01_teoria/01_conceptos_basicos/ Teoría 101 - Computadores y Lenguajes \n\n\n01_teoria/01_conceptos_basicos/ Teoría 102 - Lenguajes \n\n\n01_teoria/01_conceptos_basicos/ Teoría 103 - Python \n\n\n01_teoria/02_tipos_de_datos_basicos/ Teoría 201 - Tipos Numerales \n\n\n01_teoria/02_tipos_de_datos_basicos/ Teoría 202 - Texto y Booleanos \n\n\n01_teoria/03_composicion/ Teoría 301 - Composición condicional \n\n\n02_problemas/ Problemas 1 - Fundamentos \n\n\n02_problemas/ Problemas 2 - Tipos Numéricos \n\n\n02_problemas/ Problemas 3 - Composición condicional \n\n\n03_practicas/p0/ Práctica 0 - Introducción \n\n\n03_practicas/p1/ Práctica 1 - Tipos Primitivos \n\n\n\nNo hay resultados"
  },
  {
    "objectID": "src/01_teoria/01_conceptos_basicos/101_introducción.html#que-es-la-informática",
    "href": "src/01_teoria/01_conceptos_basicos/101_introducción.html#que-es-la-informática",
    "title": "Teoría 101",
    "section": "¿Que es la informática?",
    "text": "¿Que es la informática?\n\nProcesamiento de información automática\nInformación: Conjunto de datos numéricos, alfabéticos o alfanuméricos necesarios para plantear y resolver un problema\nTratamiento de la información:\n\nEntrada: Introducción de los datos del problema\nProcesamiento: Transformación de datos\nSalida: Presentación de resultados"
  },
  {
    "objectID": "src/01_teoria/01_conceptos_basicos/101_introducción.html#historia-de-la-informática",
    "href": "src/01_teoria/01_conceptos_basicos/101_introducción.html#historia-de-la-informática",
    "title": "Teoría 101",
    "section": "Historia de la Informática",
    "text": "Historia de la Informática"
  },
  {
    "objectID": "src/01_teoria/01_conceptos_basicos/101_introducción.html#hardware",
    "href": "src/01_teoria/01_conceptos_basicos/101_introducción.html#hardware",
    "title": "Teoría 101",
    "section": "Hardware",
    "text": "Hardware"
  },
  {
    "objectID": "src/01_teoria/01_conceptos_basicos/101_introducción.html#software",
    "href": "src/01_teoria/01_conceptos_basicos/101_introducción.html#software",
    "title": "Teoría 101",
    "section": "Software",
    "text": "Software"
  },
  {
    "objectID": "src/01_teoria/01_conceptos_basicos/103_fundamentos_python.html#fundamentos-de-python",
    "href": "src/01_teoria/01_conceptos_basicos/103_fundamentos_python.html#fundamentos-de-python",
    "title": "Teoría 103",
    "section": "Fundamentos de Python",
    "text": "Fundamentos de Python"
  },
  {
    "objectID": "src/01_teoria/01_conceptos_basicos/103_fundamentos_python.html#variables",
    "href": "src/01_teoria/01_conceptos_basicos/103_fundamentos_python.html#variables",
    "title": "Teoría 103",
    "section": "Variables",
    "text": "Variables"
  },
  {
    "objectID": "src/01_teoria/01_conceptos_basicos/103_fundamentos_python.html#asignación",
    "href": "src/01_teoria/01_conceptos_basicos/103_fundamentos_python.html#asignación",
    "title": "Teoría 103",
    "section": "Asignación",
    "text": "Asignación"
  },
  {
    "objectID": "src/01_teoria/01_conceptos_basicos/103_fundamentos_python.html#modelo-de-ejecución-imperativa",
    "href": "src/01_teoria/01_conceptos_basicos/103_fundamentos_python.html#modelo-de-ejecución-imperativa",
    "title": "Teoría 103",
    "section": "Modelo de ejecución imperativa",
    "text": "Modelo de ejecución imperativa"
  },
  {
    "objectID": "src/01_teoria/01_conceptos_basicos/103_fundamentos_python.html#entradasalida",
    "href": "src/01_teoria/01_conceptos_basicos/103_fundamentos_python.html#entradasalida",
    "title": "Teoría 103",
    "section": "Entrada/Salida",
    "text": "Entrada/Salida"
  },
  {
    "objectID": "src/01_teoria/01_conceptos_basicos/103_fundamentos_python.html#ejercicios",
    "href": "src/01_teoria/01_conceptos_basicos/103_fundamentos_python.html#ejercicios",
    "title": "Teoría 103",
    "section": "Ejercicios",
    "text": "Ejercicios"
  },
  {
    "objectID": "src/01_teoria/02_tipos_de_datos_basicos/202_texto_y_booleanos.html#cadenas-de-texto",
    "href": "src/01_teoria/02_tipos_de_datos_basicos/202_texto_y_booleanos.html#cadenas-de-texto",
    "title": "Teoría 202",
    "section": "Cadenas de texto",
    "text": "Cadenas de texto"
  },
  {
    "objectID": "src/01_teoria/02_tipos_de_datos_basicos/202_texto_y_booleanos.html#booleanos",
    "href": "src/01_teoria/02_tipos_de_datos_basicos/202_texto_y_booleanos.html#booleanos",
    "title": "Teoría 202",
    "section": "Booleanos",
    "text": "Booleanos"
  },
  {
    "objectID": "src/02_problemas/201-tipos_numericos.html",
    "href": "src/02_problemas/201-tipos_numericos.html",
    "title": "Problemas 2",
    "section": "",
    "text": "Escribe un programa en Python que solicite al usuario el radio de un círculo y escriba en la pantalla el área y la longitud de la circunferencia correspondientes.\n\\[\nArea = \\pi r^2\n\\]\n\\[\nCircunferencia = 2 \\pi r\n\\]\nIntroduce el radio del círculo:\n1\nEl área del círculo es:\n3.141592653589793\nLa circunferencia del círculo es:\n6.283185307179586\n\n\nSolución\n\nPI = 3.141592653589793\n\nprint(\"Introduce el radio del círculo:\")\nradio = float(input())\n\narea = PI * (radio ** 2)\ncircunferencia = 2 * PI * radio\n\nprint(\"El área del círculo es:\")\nprint(area)\n\nprint(\"La circunferencia del círculo es:\")\nprint(circunferencia)"
  },
  {
    "objectID": "src/02_problemas/201-tipos_numericos.html#área-y-circunferencia",
    "href": "src/02_problemas/201-tipos_numericos.html#área-y-circunferencia",
    "title": "Problemas 2",
    "section": "",
    "text": "Escribe un programa en Python que solicite al usuario el radio de un círculo y escriba en la pantalla el área y la longitud de la circunferencia correspondientes.\n\\[\nArea = \\pi r^2\n\\]\n\\[\nCircunferencia = 2 \\pi r\n\\]\nIntroduce el radio del círculo:\n1\nEl área del círculo es:\n3.141592653589793\nLa circunferencia del círculo es:\n6.283185307179586\n\n\nSolución\n\nPI = 3.141592653589793\n\nprint(\"Introduce el radio del círculo:\")\nradio = float(input())\n\narea = PI * (radio ** 2)\ncircunferencia = 2 * PI * radio\n\nprint(\"El área del círculo es:\")\nprint(area)\n\nprint(\"La circunferencia del círculo es:\")\nprint(circunferencia)"
  },
  {
    "objectID": "src/02_problemas/201-tipos_numericos.html#en-fin-la-hipotenusa",
    "href": "src/02_problemas/201-tipos_numericos.html#en-fin-la-hipotenusa",
    "title": "Problemas 2",
    "section": "2 En fin, la hipotenusa",
    "text": "2 En fin, la hipotenusa\nEscribe un programa Python que solicite al usuario los catetos de un triángulo rectángulo y escriba en la pantalla la longitud de la hipotenusa.\n\\[\nHipotenusa = \\sqrt{cateto1^2 + cateto2^2}\n\\]\nIntroduce la longitud del primer cateto:\n3\nIntroduce la longitud del segundo cateto:\n4\nLa longitud de la hipotenusa es:\n5.0\n\n\nSolución\n\nimport math\n\nprint(\"Introduce la longitud del primer cateto:\")\ncateto1 = float(input())\nprint(\"Introduce la longitud del segundo cateto:\")\ncateto2 = float(input())\n\nhipotenusa = math.sqrt(cateto1 ** 2 + cateto2 ** 2)\n\nprint(\"La longitud de la hipotenusa es:\")\nprint(hipotenusa)"
  },
  {
    "objectID": "src/02_problemas/201-tipos_numericos.html#invertir-un-número-de-2-cifras",
    "href": "src/02_problemas/201-tipos_numericos.html#invertir-un-número-de-2-cifras",
    "title": "Problemas 2",
    "section": "3 Invertir un número de 2 cifras",
    "text": "3 Invertir un número de 2 cifras\nEscribe un programa en Python que solicite al usuario un número de dos cifras y escriba en la pantalla el número invertido.\nIntroduce un número de dos cifras:\n23\nEl número invertido es:\n32\n\n\nSolución\n\nprint(\"Introduce un número de dos cifras:\")\nnumero = int(input())\n\ndecenas = numero // 10\nunidades = numero % 10\ninvertido = unidades * 10 + decenas\n\nprint(\"El número invertido es:\")\nprint(invertido)"
  },
  {
    "objectID": "src/02_problemas/201-tipos_numericos.html#invertir-un-número-de-3-cifras",
    "href": "src/02_problemas/201-tipos_numericos.html#invertir-un-número-de-3-cifras",
    "title": "Problemas 2",
    "section": "4 Invertir un número de 3 cifras",
    "text": "4 Invertir un número de 3 cifras\nEscribe un programa en Python que solicite al usuario un número de tres cifras y escriba en la pantalla el número invertido.\nIntroduce un número de tres cifras:\n123\nEl número invertido es:\n321\n\n\nSolución\n\nprint(\"Introduce un número de tres cifras:\")\nnumero = int(input())\n\ncentenas = numero // 100\ndecenas = (numero % 100) // 10\nunidades = numero % 10\n\ninvertido = unidades * 100 + decenas * 10 + centenas\n\nprint(\"El número invertido es:\")\nprint(invertido)\n\n\n\nSolución alternativa\n\nprint(\"Introduce un número de tres cifras:\")\nnumero = int(input())\n\nnumero_restante = numero\n\nunidades = numero % 10\nnumero_restante = numero // 10\n\ndecenas = numero_restante % 10\nnumero_restante = numero_restante // 10\n\ncentenas = numero_restante % 10\nnumero_restante = numero_restante // 10\n\ninvertido = unidades * 100 + decenas * 10 + centenas\n\nprint(\"El número invertido es:\")\nprint(invertido)"
  },
  {
    "objectID": "src/02_problemas/201-tipos_numericos.html#suma-de-dígitos",
    "href": "src/02_problemas/201-tipos_numericos.html#suma-de-dígitos",
    "title": "Problemas 2",
    "section": "5 Suma de dígitos",
    "text": "5 Suma de dígitos\nEscribe un programa en Python que solicite al usuario un número de tres cifras y escriba en la pantalla la suma de sus dígitos.\nIntroduce un número de tres cifras:\n123\nLa suma de los dígitos es:\n6\n\n\nSolución\n\nprint(\"Introduce un número de tres cifras:\")\nnumero = int(input())\n\ncentenas = numero // 100\ndecenas = (numero % 100) // 10\nunidades = numero % 10\n\nsuma = centenas + decenas + unidades\n\nprint(\"La suma de los dígitos es:\")\nprint(suma)"
  },
  {
    "objectID": "src/02_problemas/201-tipos_numericos.html#promedio-de-3-números",
    "href": "src/02_problemas/201-tipos_numericos.html#promedio-de-3-números",
    "title": "Problemas 2",
    "section": "6 Promedio de 3 números",
    "text": "6 Promedio de 3 números\nEscribe un programa en Python que solicite al usuario tres números enteros y escriba en la pantalla el promedio de los tres.\nIntroduce el primer número:\n1\nIntroduce el segundo número:\n2\nIntroduce el tercer número:\n3\nEl promedio de los tres números es:\n2.0\n\n\nSolución\n\nprint(\"Introduce el primer número:\")\nnumero1 = int(input())\nprint(\"Introduce el segundo número:\")\nnumero2 = int(input())\nprint(\"Introduce el tercer número:\")\nnumero3 = int(input())\n\npromedio = (numero1 + numero2 + numero3) / 3\n\nprint(\"El promedio de los tres números es:\")\nprint(promedio)"
  }
]